;====================Awaken's C0 Compiler====================
; 标号以@@name@scope的形式命名
; 函数以@scope的形式命名
; 字面值以$$value的形式命名
; 全局量以$name@global的形式命名
; 常量以$name@scope的形式命名
; 全局变量以$name@scope的形式命名

.386									;32位模式
.model flat, stdcall					;32位寻址, stdcall模式
option casemap :none					;大小写敏感

includelib msvcrt.lib	;vc运行时环境
printf PROTO C:ptr sbyte, :vararg
scanf PROTO C:ptr sbyte, :vararg

.data

$$printf_char db "%c", 0
$$printf_int db "%d", 0
$$printf_float db "%f", 0
$$new_line db 10, 13, 0
$$scanf_char db "%c", 0
$$scanf_int db "%d", 0
$$scanf_float db "%f", 0
$$string$0 db "-->", 0
$$int$1 dd 1
$$int$2 dd 3
$$int$3 dd 2

.data?


.code

$move PROC
	PUSH EBX
	PUSH EBP
	PUSH ESI
	PUSH EDI
	SUB ESP, 0
	MOV EBP, dword ptr [esp] + 20
	MOV EBX, dword ptr [esp] + 24
	PUSH EBP
	PUSH offset $$printf_int
	CALL printf
	ADD ESP, 8
	PUSH offset $$new_line
	CALL printf
	ADD ESP, 4
	PUSH offset $$string$0
	CALL printf
	ADD ESP, 4
	PUSH EBX
	PUSH offset $$printf_int
	CALL printf
	ADD ESP, 8
	PUSH offset $$new_line
	CALL printf
	ADD ESP, 4
@@endof$move:
	ADD ESP, 0
	POP EDI
	POP ESI
	POP EBP
	POP EBX
	RET 8
$move ENDP

$hanoi PROC
	PUSH EBX
	PUSH EBP
	PUSH ESI
	PUSH EDI
	SUB ESP, 0
	MOV EDI, dword ptr [esp] + 24
	MOV ESI, dword ptr [esp] + 28
	MOV EBP, dword ptr [esp] + 32
	MOV EAX, dword ptr [esp] + 20
	CMP EAX, $$int$1
	MOV dword ptr [esp] + 20, EAX
	JNE @@label0@hanoi
	PUSH EBP
	PUSH EDI
	CALL $move
	JMP @@label1@hanoi
@@label0@hanoi:
	PUSH ESI
	PUSH EBP
	PUSH EDI
	MOV EBX, dword ptr [esp] + 32
	SUB EBX, $$int$1
	PUSH EBX
	CALL $hanoi
	PUSH EBP
	PUSH EDI
	CALL $move
	PUSH EBP
	PUSH EDI
	PUSH ESI
	MOV EBX, dword ptr [esp] + 32
	SUB EBX, $$int$1
	PUSH EBX
	CALL $hanoi
@@label1@hanoi:
@@endof$hanoi:
	ADD ESP, 0
	POP EDI
	POP ESI
	POP EBP
	POP EBX
	RET 16
$hanoi ENDP

$main PROC
	SUB ESP, 0
	SUB ESP, 4
	PUSH ESP
	PUSH offset $$scanf_int
	CALL scanf
	ADD ESP, 8
	POP EBX
	PUSH $$int$2
	PUSH $$int$3
	PUSH $$int$1
	PUSH EBX
	CALL $hanoi
@@endof$main:
	ADD ESP, 0
	RET 0
$main ENDP
END $main
