Please input source file name:
vinit lexer success!
init symtable success!
init syntax success!
init four success!
ar x,						x 1 0 0
y:						y 2 1 0
integer;
function gcd(						gcd 3 2 0
a,						a 4 3 1
b:						b 5 4 1
integer):integer;
begin
	if b=0 						_t0 6 5 1
						 7 6 1
then
		gcd :=a
	else
		gcd := gcd(b,a - a/b*b						_t1 8 7 1
)
						_t2 9 8 1
						_t3 10 9 1
						_t4 11 10 1
end;

begin
	write("shabi")						shabi 12 3 0
;
	read(x);
	read(y);
	write(gcd(x,y))						_t5 13 12 0

end.
---------------------
-  Complie Success! -
---------------------
1	ENTER gcd:
2		EQ,b,0,_t0
3		JZ,_t0,L0
4		BEC,a,-,gcd
5		JMP,-,L1
6	LABEL L0:
7		PUSH,x,-,b
8		DIV,a,b,_t1
9		MUL,_t1,b,_t2
10		SUB,a,_t2,_t3
11		PUSH,y,-,_t3
12		CALL,gcd,2,_t4
13		BEC,_t4,-,gcd
14	LABEL L1:
15		END,-,-,gcd
16	ENTER main:
17		WRITE,-,-,"shabi"
18		READ,-,-,x
19		READ,-,-,y
20		PUSH,x,-,x
21		PUSH,y,-,y
22		CALL,gcd,2,_t5
23		WRITE,-,-,_t5
24		END,-,-,-

Start generate mips code
	.data
_s1:	.ascii	"shabi"
	.text
	 move,$fp,$sp
	 sw,$fp,-4($sp)
	 sw,$fp,-8($sp)
gcd:
	 addi,$sp,$sp,-48
	 move,$t1,$fp
	 lw,$t0,-24($t1)
	 li,$t1,0
	 move,$t3,$fp
	 lw,$t2,-28($t3)
	 seq,$t2,$t0,$t1
	 move,$t0,$fp
	 sw,$t2,-28($t0)
	 move,$t1,$fp
	 lw,$t0,-28($t1)
	 beqz,$t0,$L0
	 move,$t1,$fp
	 lw,$t0,-20($t1)
	 move,$t1,$fp
	 lw,$t1,-4($t1)
	 sw,$t0,-24($t1)
	 b,$L1
$L0:
	 move,$t1,$fp
	 lw,$t0,-24($t1)
	 sw,$t0,-20($sp)
	 move,$t1,$fp
	 lw,$t0,-20($t1)
	 move,$t2,$fp
	 lw,$t1,-24($t2)
	 move,$t3,$fp
	 lw,$t2,-32($t3)
	 div,$t0,$t1
	 mflo,$t2
	 move,$t0,$fp
	 sw,$t2,-32($t0)
	 move,$t1,$fp
	 lw,$t0,-32($t1)
	 move,$t2,$fp
	 lw,$t1,-24($t2)
	 move,$t3,$fp
	 lw,$t2,-36($t3)
	 mult,$t0,$t1
	 mflo,$t2
	 move,$t0,$fp
	 sw,$t2,-36($t0)
	 move,$t1,$fp
	 lw,$t0,-20($t1)
	 move,$t2,$fp
	 lw,$t1,-36($t2)
	 move,$t3,$fp
	 lw,$t2,-40($t3)
	 sub,$t2,$t0,$t1
	 move,$t0,$fp
	 sw,$t2,-40($t0)
	 move,$t1,$fp
	 lw,$t0,-40($t1)
	 sw,$t0,-24($sp)
	 move,$t0,$fp
	 lw,$t0,-4($t0)
	 lw,$t0,-4($t0)
	 sw,$fp,-4($sp)
	 sw,$t0,-8($sp)
	 sw,$ra,-12($sp)
	 sw,$v0,-16($sp)
	 move,$fp,$sp
	 jal,gcd
	 move,$t1,$fp
	 sw,$v0,-44($t1)
	 lw,$fp,-4($sp)
	 lw,$ra,-12($sp)
	 lw,$v0,-16($sp)
	 move,$t1,$fp
	 lw,$t0,-44($t1)
	 move,$t1,$fp
	 lw,$t1,-4($t1)
	 sw,$t0,-24($t1)
$L1:
	 move,$t1,$fp
	 lw,$t0,-24($t1)
	 move,$v0,$t0
	 addi,$sp,$sp,48
	 jr,$ra
main:
	 addi,$sp,$sp,-32
	 li,$v0,4
	 la,$a0,_s1
	 syscall
	 li,$v0,5
	 syscall
	 move $t1,$v0
	 move,$t2,$fp
	 sw,$t1,-20($t2)
	 li,$v0,5
	 syscall
	 move $t1,$v0
	 move,$t2,$fp
	 sw,$t1,-24($t2)
	 move,$t2,$fp
	 lw,$t1,-20($t2)
	 sw,$t1,-20($sp)
	 move,$t2,$fp
	 lw,$t1,-24($t2)
	 sw,$t1,-24($sp)
	 move,$t1,$fp
	 lw,$t1,-4($t1)
	 sw,$fp,-4($sp)
	 sw,$t1,-8($sp)
	 sw,$ra,-12($sp)
	 sw,$v0,-16($sp)
	 move,$fp,$sp
	 jal,gcd
	 move,$t2,$fp
	 sw,$v0,-28($t2)
	 lw,$fp,-4($sp)
	 lw,$ra,-12($sp)
	 lw,$v0,-16($sp)
	 move,$t2,$fp
	 lw,$t1,-28($t2)
	 li,$v0,1
	 move,$a0,$t1
	 syscall
	 addi,$sp,$sp,32
	 jr,$ra
